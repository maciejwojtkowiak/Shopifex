@model Shopifex.Models.OrderCreateViewModel
@using Shopifex.Constants

<h2>Utwórz nowe zamówienie</h2>

<form asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="FullName"></label>
        <input asp-for="FullName" class="form-control" />
        <span asp-validation-for="FullName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Address"></label>
        <input asp-for="Address" class="form-control" />
        <span asp-validation-for="Address" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Phone"></label>
        <input asp-for="Phone" class="form-control" />
        <span asp-validation-for="Phone" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Email"></label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label>Status</label>
        <select asp-for="Status" class="form-control">
            @foreach (OrderStatusEnum status in Enum.GetValues(typeof(OrderStatusEnum)))
            {
                <option value="@status">
                    @OrderStatusDictionary.GetOrderStatus(status)
                </option>
            }
        </select>
    </div>

    <h4>Produkty</h4>

    @if (Model.Products == null || !Model.Products.Any())
    {
        <div class="alert alert-warning">
            Dodaj najpierw produkt do bazy danych, bez produktu nie da się utworzyć zamówienia.
        </div>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Produkt</th>
                    <th>Ilość</th>
                    <th>Cena sztuki</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Products.Count; i++)
                {
                    <tr>
                        <td>
                            <input type="checkbox" asp-for="Products[i].IsSelected" />
                            <input type="hidden" asp-for="Products[i].ProductName" />
                            <input type="hidden" asp-for="Products[i].ProductId" />
                            <input type="hidden" asp-for="Products[i].Price" />
                            <p>@Model.Products[i].ProductName</p>
                        </td>
                        <td>
                            <input asp-for="Products[i].Quantity" class="form-control" />
                            <span asp-validation-for="Products[i].Quantity" class="text-danger"></span>
                        </td>
                        <td>@Model.Products[i].Price $</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    @if (ViewData["noSelectedProducts"] != null)
    {
        <div class="alert alert-warning">
            @ViewData["noSelectedProducts"]
        </div>
    }

    <button type="submit" class="btn btn-primary" @(Model.Products == null || !Model.Products.Any() ? "disabled" : "")>
        Utwórz zamówienie
    </button>
    <a asp-action="Index" class="btn btn-secondary">Anuluj</a>
</form>